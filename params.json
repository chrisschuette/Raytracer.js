{"name":"Raytracer.js","tagline":"simple raytracer for the Phong shading model implemented in JS","body":"<img src=\"http://www.christophschuette.com/blog/wp-content/uploads/2014/05/render-300x225.png\" alt=\"rendered scene\"></img>\r\n\r\nRaytracer.js\r\n============\r\n\r\nraytracer.js is a simple raytracer for the Phong shading model implemented in JS. For more information see [here](http://www.christophschuette.com/blog/?p=134).\r\n\r\nRaytracing is an elegant technique which allows to determine the radiance of light inciding on the eye of the observer from a particular direction by following the ray backwards out into the scene and examining the surface it was emitted from.\r\n\r\n### Implementation. ###\r\nI have implemented the simplest version of these ideas in a ray tracer written in JavaScript. Ray tracing is quite a computationally expensive algorithm and therefore implementing it in a scripting language is a spectacularly bad idea. Nonetheless, the attractive aspects about it where that it can be directly delivered into the browser.\r\n\r\n### Dependencies. ###\r\nThe project relies on the following dependencies:\r\n* [require.js](http://requirejs.org/)\r\n* [jquery](http://jquery.com/) (only for user interface)\r\n* [jquery-ui](http://jqueryui.com/) (only for user interface)\r\n\r\n### Live Demo. ###\r\nA [live](http://www.christophschuette.com/playground/raytracer/) demo can be found [here](http://www.christophschuette.com/playground/raytracer/).\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}